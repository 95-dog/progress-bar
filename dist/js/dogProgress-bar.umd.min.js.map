{"version":3,"file":"dogProgress-bar.umd.min.js","sources":["../../src/js/dogProgress-bar.ts"],"sourcesContent":["/**\r\n *  ###########################################\r\n *\r\n * 注意事项：\r\n *\r\n * 如果设置了moveBar width的动画则会影响updateMoveBarWidthAndMoveBtnLeft方法\r\n *\r\n * 无法读取this.element.getBoundingClientRect()当前的值\r\n *\r\n * 因为此时浏览器还没有绘制完成 可使用setTimeout() 设置大于动画时间的延迟解决\r\n *\r\n * ############################################\r\n */\r\nimport '../css/progress-bar.scss';\r\n\r\nconst ElementClass: string = 'dog-progress';\r\nconst MoveBarClass: string = 'move-bar';\r\nconst MoveBtnClass: string = 'move-btn';\r\n\r\nexport interface ProgressBarOptions {\r\n    height?: string,\r\n    width?: string,\r\n    moveBtnPercentage?: number,\r\n    moveBtnRadius?: string,\r\n    horizontal?: boolean,\r\n    step?: number\r\n    handleProgressChange?: HandleProgressChange,\r\n}\r\n\r\n\r\nclass DogProgressBar {\r\n    options: ProgressBarOptions = {\r\n        height: '10px',\r\n        width: '100%',\r\n        horizontal: true,\r\n        //0-1\r\n        moveBtnPercentage: 0,\r\n        moveBtnRadius: '15px',\r\n        //0-100\r\n        step: 1,\r\n        /**\r\n         * 当进度条发生改变时触发事件\r\n         *\r\n         * @param event\r\n         */\r\n        handleProgressChange: (event: ProgressCustomEvent) => {}\r\n    }\r\n    element: Element;\r\n    moveBar: HTMLElement;\r\n    moveBtn: HTMLElement;\r\n    isDragging: boolean = false;\r\n    horizontal: boolean;\r\n    moveBtnSelect: boolean = false;\r\n\r\n    /**\r\n     * 创建一个 ProgressBar 实例\r\n     * @param element\r\n     * @param options - 进度条的配置选项\r\n     * @return void\r\n     * @example\r\n     *    let progressBars = document.querySelectorAll('.volume-progress');\r\n     *     progressBars.forEach(item => new progressBar(item))\r\n     */\r\n    constructor(element: Element, options?: ProgressBarOptions) {\r\n        if (!element) {\r\n            console.error(`Element is \"${element}\"`);\r\n            return;\r\n        }\r\n        this.element = element;\r\n        this.options = Object.assign({}, this.options, options);\r\n        this.horizontal = this.options.horizontal;\r\n        let dataHorizontal: string = element.getAttribute('data-dogProgress-horizontal');\r\n        if (dataHorizontal) {\r\n            if (dataHorizontal === 'true') this.horizontal = true;\r\n            if (dataHorizontal === 'false') this.horizontal = false;\r\n        }\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 初始化Progress\r\n     */\r\n    init = () => {\r\n        this.element.classList.add(ElementClass);\r\n        if (!this.horizontal) {\r\n            this.element.classList.add('progress-vertical')\r\n        }\r\n\r\n        let _element: HTMLElement = this.element as HTMLElement;\r\n        _element.style.height = this.element.getAttribute('data-dogProgress-height') ?? this.options.height;\r\n        _element.style.width = this.element.getAttribute('data-dogProgress-width') ?? this.options.width;\r\n        _element.style.borderRadius = (this.element.clientHeight / 2) + 'px';\r\n        _element.addEventListener('click', (event: MouseEvent) => {\r\n            this.updateMoveBarWidthAndMoveBtnLeft(this.horizontal ? event.clientX : event.clientY);\r\n        })\r\n        this.buildMoveBar();\r\n        this.element.addEventListener('positionChange', this.options.handleProgressChange)\r\n        this.element.addEventListener('mouseover', (event: MouseEvent) => {\r\n            this.addKeyboardListeners();\r\n            this.showMoveBtn();\r\n        })\r\n        this.element.addEventListener('mouseout', (event: MouseEvent) => {\r\n            this.removeKeyboardListeners();\r\n            this.hideMovBtn();\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * 监听键盘事件\r\n     */\r\n    addKeyboardListeners = () => {\r\n        this.removeKeyboardListeners()\r\n        document.addEventListener('keydown', this.handleKeyboardNavigation)\r\n    }\r\n\r\n    /**\r\n     * 移除键盘事件\r\n     */\r\n    removeKeyboardListeners = () => {\r\n        document.removeEventListener('keydown', this.handleKeyboardNavigation);\r\n    }\r\n\r\n    /**\r\n     * 键盘事件处理\r\n     * @param event - KeyboardEvent\r\n     */\r\n    handleKeyboardNavigation = (event: KeyboardEvent) => {\r\n        let eleRect: DOMRect = this.element.getBoundingClientRect(),\r\n            moveBarRect: DOMRect = this.moveBar.getBoundingClientRect(),\r\n            stepValue: number, mouseCurrentValue: number;\r\n        if (this.horizontal) {\r\n            stepValue = (this.options.step / 100) * eleRect.width;\r\n            if (event.key === 'ArrowLeft') {\r\n                mouseCurrentValue = Math.max(0, moveBarRect.width - stepValue) + eleRect.left;\r\n                // this.moveBar.style.width = `${Math.max(0, (moveBarRect.width - stepValue)).toFixed(1)}px`;\r\n            }\r\n            if (event.key === 'ArrowRight') {\r\n                mouseCurrentValue = Math.min(eleRect.width, (moveBarRect.width + stepValue)) + eleRect.left;\r\n                // 处理向右键的逻辑\r\n                // this.moveBar.style.width = `${Math.min(eleRect.width, (moveBarRect.width + stepValue)).toFixed(1)}px`;\r\n            }\r\n            this.updateMoveBarWidthAndMoveBtnLeft(mouseCurrentValue)\r\n        } else {\r\n            stepValue = (this.options.step / 100) * eleRect.height\r\n            if (event.key === 'ArrowUp') {\r\n                mouseCurrentValue = eleRect.top + (eleRect.height - (moveBarRect.height + stepValue));\r\n            } else if (event.key === 'ArrowDown') {\r\n                mouseCurrentValue = eleRect.top + (eleRect.height - (moveBarRect.height - stepValue));\r\n            }\r\n            this.updateMoveBarWidthAndMoveBtnLeft(mouseCurrentValue)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * 展示moveBtn按钮\r\n     */\r\n    showMoveBtn = () => {\r\n        this.moveBtn.style.visibility = 'unset';\r\n        this.moveBtn.style.opacity = '1';\r\n    }\r\n\r\n    /**\r\n     * 隐藏moveBtn按钮\r\n     */\r\n    hideMovBtn = () => {\r\n        if (this.moveBtnSelect) return;\r\n        this.moveBtn.style.visibility = 'hidden';\r\n        this.moveBtn.style.opacity = '0';\r\n    }\r\n\r\n\r\n    /**\r\n     * 绑定当bar发生变动时触发事件\r\n     */\r\n    bindPositionChange = () => {\r\n        let rectValue: keyof DOMRect = this.horizontal ? 'width' : 'height';\r\n        let changeEvent: ProgressCustomEvent = new CustomEvent('positionChange', {\r\n            detail: {\r\n                percentage: +(this.moveBar.getBoundingClientRect()[rectValue] /\r\n                    this.element.getBoundingClientRect()[rectValue]\r\n                ).toFixed(2),\r\n            }\r\n        });\r\n        // 触发 change 事件\r\n        this.element.dispatchEvent(changeEvent);\r\n    }\r\n\r\n    /**\r\n     * 构建moveBar\r\n     */\r\n    buildMoveBar = () => {\r\n        let moveBar: HTMLElement = document.createElement('div'),\r\n            styleValue: any = this.horizontal ? 'width' : 'height',\r\n            percentageValue: number = +this.element.getAttribute('data-dogProgress-value') || this.options.moveBtnPercentage\r\n        moveBar.classList.add(MoveBarClass);\r\n        if (typeof percentageValue === 'number') {\r\n            if (percentageValue < 0 || percentageValue > 1) {\r\n                throw new Error('moveBtnPercentage的值为0-1之间');\r\n            }\r\n            moveBar.style[styleValue] = `${percentageValue * 100}%`;\r\n        }\r\n        moveBar.style.borderRadius = (this.element.clientHeight / 2) + 'px';\r\n        this.element.append(moveBar);\r\n        this.moveBar = moveBar;\r\n        this.buildMoveBtn();\r\n    }\r\n\r\n    /**\r\n     * 构建MoveBtn\r\n     */\r\n    buildMoveBtn = () => {\r\n        let moveBtn: HTMLElement = document.createElement('div'),\r\n            positionValue: any = this.horizontal ? 'right' : 'top';\r\n        moveBtn.classList.add(MoveBtnClass);\r\n        moveBtn.style.height = this.options.moveBtnRadius;\r\n        moveBtn.style.width = this.options.moveBtnRadius;\r\n        this.moveBar.append(moveBtn);\r\n        moveBtn.style[positionValue] = `-${moveBtn.offsetWidth / 2}px`;\r\n        this.moveBtn = moveBtn;\r\n        this.moveBtn.addEventListener('mousedown', () => {\r\n            this.isDragging = true;\r\n            this.moveBtnSelect = true;\r\n            document.addEventListener('mousemove', this.onMousemove)\r\n            document.addEventListener('mouseup', this.onMouseup)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 鼠标按下事件\r\n     * @param event - mouseEvent\r\n     */\r\n    onMouseup = (event: MouseEvent) => {\r\n        document.removeEventListener('mousemove', this.onMousemove);\r\n        document.removeEventListener('mouseup', this.onMouseup)\r\n        this.isDragging = false;\r\n        this.moveBtnSelect = false;\r\n        this.hideMovBtn();\r\n        this.setUserSelect('');\r\n    }\r\n\r\n    /**\r\n     * 鼠标移动事件\r\n     * @param event - MouseEvent\r\n     */\r\n    onMousemove = (event: MouseEvent) => {\r\n        if (!this.isDragging || !this.element || !this.moveBar || !this.moveBtn) return;\r\n        this.setUserSelect('none');\r\n        this.updateMoveBarWidthAndMoveBtnLeft(this.horizontal ? event.clientX : event.clientY)\r\n    }\r\n\r\n    /**\r\n     * 更新moveBar和moveBarBtn的位置\r\n     * @param client - number\r\n     */\r\n    updateMoveBarWidthAndMoveBtnLeft = (client: number) => {\r\n        let eleRectValue: keyof DOMRect, eleRectStyleValue: keyof DOMRect, barValue: any, btnValue: any;\r\n        if (this.horizontal) {\r\n            eleRectValue = 'left';\r\n            eleRectStyleValue = 'width';\r\n            barValue = 'width';\r\n            btnValue = 'right';\r\n        } else {\r\n            eleRectValue = 'top';\r\n            eleRectStyleValue = 'height';\r\n            barValue = 'height';\r\n            btnValue = 'top';\r\n        }\r\n\r\n\r\n        requestAnimationFrame(() => {\r\n            let eleRect: DOMRect = this.element.getBoundingClientRect(),\r\n                mousePosition: number = client - eleRect[eleRectValue],\r\n                btnPosition: number, barPosition: number,\r\n                barPercentage: number, btnPercentage: number;\r\n            let stepSize: number = eleRect[eleRectStyleValue] * (this.options.step / 100);\r\n            if (this.horizontal) {\r\n                barPosition = Math.max(0, Math.min(mousePosition, eleRect[eleRectStyleValue]));\r\n                barPercentage = Math.min(100, (barPosition / eleRect.width) * 100);\r\n                btnPosition = 0;\r\n                if (barPosition < this.moveBtn.getBoundingClientRect().width) {\r\n                    btnPosition = -(this.moveBtn.getBoundingClientRect().width - (+barPosition.toFixed(0)));\r\n                }\r\n            } else {\r\n                barPosition = Math.round(Math.max(0, Math.min(eleRect[eleRectStyleValue] - mousePosition, eleRect[eleRectStyleValue])) / stepSize) * stepSize;\r\n                barPercentage = (barPosition / eleRect.height) * 100;\r\n                btnPosition = 0;\r\n                if (mousePosition >= eleRect.height - this.moveBtn.getBoundingClientRect().height) {\r\n                    btnPosition = Math.max(-this.moveBtn.offsetWidth, barPosition - this.moveBtn.offsetWidth);\r\n                }\r\n            }\r\n            this.moveBar.style[barValue] = barPercentage + '%';\r\n            this.moveBtn.style[btnValue] = btnPosition + 'px';\r\n            this.bindPositionChange();\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 设置用户选中避免拖动突出触发选中\r\n     * @param value - string\r\n     */\r\n    setUserSelect = (value: string) => {\r\n        document.body.style.userSelect = value;\r\n    }\r\n}\r\n\r\n\r\ntype ProgressEvent = {\r\n    percentage: number\r\n}\r\nexport type ProgressCustomEvent = CustomEvent<ProgressEvent>;\r\n\r\ntype HandleProgressChange = (event: ProgressCustomEvent) => void;\r\n\r\nexport default DogProgressBar;\r\n"],"names":["constructor","element","options","this","height","width","horizontal","moveBtnPercentage","moveBtnRadius","step","handleProgressChange","event","isDragging","moveBtnSelect","init","classList","add","_element","style","getAttribute","borderRadius","clientHeight","addEventListener","updateMoveBarWidthAndMoveBtnLeft","clientX","clientY","buildMoveBar","addKeyboardListeners","showMoveBtn","removeKeyboardListeners","hideMovBtn","document","handleKeyboardNavigation","removeEventListener","stepValue","mouseCurrentValue","eleRect","getBoundingClientRect","moveBarRect","moveBar","key","Math","max","left","min","top","moveBtn","visibility","opacity","bindPositionChange","rectValue","changeEvent","CustomEvent","detail","percentage","toFixed","dispatchEvent","createElement","styleValue","percentageValue","Error","append","buildMoveBtn","positionValue","offsetWidth","onMousemove","onMouseup","setUserSelect","client","eleRectValue","eleRectStyleValue","barValue","btnValue","requestAnimationFrame","btnPosition","barPosition","barPercentage","mousePosition","stepSize","round","value","body","userSelect","console","error","Object","assign","dataHorizontal"],"mappings":"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"}